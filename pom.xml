<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>musiccatalog</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>MusicCatalog</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<!--<finalName>demo</finalName>-->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.20.0</version>
				<configuration>
					<dockerHost>unix:///var/run/docker.sock</dockerHost>

					<images>
						<image>
							<name>${project.artifactId}</name>
							<build>
								<dockerFileDir>${project.basedir}/dockerfile</dockerFileDir>

								<!--copies artficact to docker build dir in target-->
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>
							<run>
								<ports>
									<port>8080:8080</port>
								</ports>
								<links>
									<link>mysqldb:mysqldb</link>
								</links>
								<env>
									<SPRING_DATASOURCE_URL>jdbc:mysql://mysqldb:3306/musiccatalog</SPRING_DATASOURCE_URL>
									<SPRING_PROFILES_ACTIVE>mysql</SPRING_PROFILES_ACTIVE>
								</env>
								<dependsOn>
									<container>mysql</container>
								</dependsOn>
							</run>
						</image>
						<image>
							<name>mysql</name>
							<alias>mysqldb</alias>
							<run>
								<!--expose port for dn-->
								<ports>
									<port>3306:3306</port>
								</ports>
								<!--set env prams for mysql image-->
								<env>
									<MYSQL_DATABASE>musiccatalog</MYSQL_DATABASE>
								</env>
								<!--wait for db to start-->
								<wait>
									<time>10000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>start</id>-->
						<!--<phase>pre-integration-test</phase>-->
						<!--<goals>-->
							<!--&lt;!&ndash; "build" should be used to create the images with the-->
                                 <!--artifact &ndash;&gt;-->
							<!--<goal>build</goal>-->
							<!--<goal>start</goal>-->
						<!--</goals>-->
					<!--</execution>-->
					<!--<execution>-->
						<!--<id>stop</id>-->
						<!--<phase>post-integration-test</phase>-->
						<!--<goals>-->
							<!--<goal>stop</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			</plugin>

		</plugins>
	</build>

</project>
